---
- name: Fetch Github repository
  git: repo=https://github.com/mesosphere/marathon-lb.git dest=/marathon-lb
- name: Set source directory permissions
  file: path=/marathon-lb state=directory mode=0755
- name: Install HAproxy build requirements
  apt: name={{item}} state=present update_cache=yes
  with_items:
    - python3 
    - python3-pip 
    - openssl 
    - libssl-dev 
    - runit 
    - procps
    - wget 
    - build-essential 
    - libpcre3 
    - libpcre3-dev 
    - python3-dateutil 
    - socat 
    - iptables 
    - libreadline-dev
- name: Create HAproxy directories
  file: >
    path={{item}}
    state=directory
    mode=755
  with_items:
    - '/var/state/haproxy'
    - '/var/run/haproxy'
- name: Install Python requirements
  pip: executable=pip3 requirements=/marathon-lb/requirements.txt
- name: Install HAproxy
  apt: name=haproxy state=latest
- name: Build latest HAproxy (1.6+)
  shell: ./build-haproxy.sh
  args:
    chdir: /marathon-lb
    creates: /usr/local/sbin/haproxy
  register: var_haproxy_build
- name: Check if SSL certificate exists
  stat: path=/etc/ssl/mesosphere.com.pem
  register: var_stat_marathon_lb_ssl_certificate
- name: Generate SSL certificate
  shell: "{{item}}"
  with_items:
    - 'openssl genrsa -out /tmp/server-key.pem 2048'
    - 'openssl req -new -key /tmp/server-key.pem -out /tmp/server-csr.pem -subj /CN=*/'
    - 'openssl x509 -req -in /tmp/server-csr.pem -out /tmp/server-cert.pem -signkey /tmp/server-key.pem -days 3650'
    - 'cat /tmp/server-cert.pem /tmp/server-key.pem > /etc/ssl/mesosphere.com.pem'
    - 'rm /tmp/server-*.pem'
  when: not var_stat_marathon_lb_ssl_certificate.stat.exists
- name: Add HAproxy default variables
  template: src=./etc.default.haproxy.j2 dest=/etc/default/haproxy backup=yes
- name: Restart/reload HAproxy
  service: >
    name=haproxy 
    state="{% if var_haproxy_build|skipped %}reloaded{% else %}restarted{% endif %}"
  ignore_errors: true

