# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    # All Vagrant configuration is done here. The most common configuration
    # options are documented and commented below. For a complete reference,
    # please see the online documentation at vagrantup.com.
    config.vm.define '{{ vagrant_vm_name }}' do |django_mesos_example|
      django_mesos_example.vm.hostname = "{{ vagrant_vm_name }}"
    end
    # Every Vagrant virtual environment requires a box to build off of.
    config.vm.box = "{{ vagrant_base_box }}"
    # The url from where the 'config.vm.box' box will be fetched if it
    # doesn't already exist on the user's system.
    # config.vm.box_url = "http://domain.com/path/to/above.box"

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    {% for forwarded_port in vagrant_forwarded_ports %}
    config.vm.network :forwarded_port, guest: {{ forwarded_port.guest }}, host: {{ forwarded_port.host }}
    {% endfor %}

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    config.vm.network :private_network, ip: "{{ vagrant_private_network_ip|default('192.168.33.10') }}"

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network :public_network

    # If true, then any SSH connections made will enable agent forwarding.
    # Default value: false
    # config.ssh.forward_agent = true
    config.ssh.username = '{{ vagrant_ssh_username|default("root") }}'
    config.ssh.private_key_path = '{{ vagrant_ssh_private_key_path|default("./.ssh/id_rsa") }}'
    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    {% for synced_folder in vagrant_synced_folders %}
    config.vm.synced_folder "{{ synced_folder.local }}", "{{ synced_folder.vm }}"
    {% endfor %}

    config.vm.provider :virtualbox do |vb|
      # Use VBoxManage to customize the VM. For example to change memory:
      vb.customize ["modifyvm", :id, "--memory", "{{ vagrant_vm_memory|default(1024) }}"]
      vb.customize ["modifyvm", :id, "--cpuexecutioncap", "{{ vagrant_vm_cpu|default(50) }}"]
      vb.name = "{{ vagrant_vm_name }}"
    end

    # Ansible provisioning
    config.vm.provision "ansible" do |ansible|
      ansible.playbook = "{{ vagrant_base_dir|os_path_join('provisioning', 'deployment.yml') }}"
      ansible.raw_arguments = {{ vagrant_ansible_raw_arguments|to_json }}
    end
end
